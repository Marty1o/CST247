@using Activity7.Models
@model Tuple<List<CustomerModel>, CustomerModel>

@*
    AJAX page that renders customer info without refreshing page    
*@)
<!-- Razor Page variables -->
@{
    ViewBag.Title = "Customer Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    AjaxOptions ajaxOptions = new AjaxOptions { HttpMethod = "POST",
                                                InsertionMode = InsertionMode.Replace,
                                                UpdateTargetId = "customerInfo",
                                                OnSuccess = "ajaxSuccess"
                                              };
}
<script type="text/javascript">
    // This JavaScript function is called after the AJAX Form and Partial View are updated
    function ajaxSuccess()
    {
        // This is an example where on successful completion of the Partial View update you can call your own Controller Method
        // The jQuery code below makes an AJAX POST to the Customer Controller to its GetMoreInfo() passing it a Customer ID
        // Uncomment this jQuery call to display a JavaScript alert() with some data returned from the Controller Method
        $.post('@Url.Action("GetMoreInfo", "Customer")', { customer: 2 }, function (data) { alert(data); });
    }
</script>

<!-- Simple HTML Form for selecting a Customer -->
<h4> @Html.Label("Please select a Customer:") </h4>

<!-- The Form below is a standard non AJAX Form -->
<!-- To see how the Page would work without AJAX uncomment the form below and then comment out the AJAX based form -->
@*
    @using (Html.BeginForm("OnSelectCustomer1", "Customer", FormMethod.Post))
*@ 
@using (Ajax.BeginForm("OnSelectCustomer2", "Customer", ajaxOptions, new { id = "myform" }))
{
    @Html.AntiForgeryToken();

    var selected = false;
    foreach (var customer in Model.Item1)
    {
        if (Model.Item1.IndexOf(customer) == 0)
        {
            selected = true;
        }
        else
        {
            selected = false;
        }
        @Html.RadioButton("Customer", customer.ID, selected, new { onchange = "$('#myform').trigger('submit');" });
        @Html.Label(customer.Name);
    }
    <!-- The Form Submit as coded is currently done via the Radio button onchange handler via jQuery -->
    <!-- To use one of the Submit buttons below remove the Radio button onchange handler and uncomment desired Submit button -->
    <!-- <input type="submit" id="SubmitButton" value="Display" /> -->
    <!-- <button type="button" onclick="$('#myform').trigger('submit');"><img width="30px" height="30px" src="~/Images/button.jpg"/></button> -->
    <br />
    <br />
    <hr />
    <!-- Partial View for displaying the Customer Details (within this div)-->
    <div id="customerInfo">
        @Html.Partial("_CustomerDetails", Model.Item2)
    </div>
}


